/*
 * API
 * ## Welcome  This is a place to put general notes and extra information, for internal use.  To get started designing/documenting this API, select a version on the left. # Title No Description
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * POSTAuthenticationTokenValidateWithLoginRequest
 */
@JsonPropertyOrder({
  POSTAuthenticationTokenValidateWithLoginRequest.JSON_PROPERTY_USERNAME,
  POSTAuthenticationTokenValidateWithLoginRequest.JSON_PROPERTY_PASSWORD,
  POSTAuthenticationTokenValidateWithLoginRequest.JSON_PROPERTY_REQUEST_TOKEN
})
@JsonTypeName("POST_authentication_token_validate_with_login_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-16T11:26:21.377642+02:00[Europe/Paris]")
public class POSTAuthenticationTokenValidateWithLoginRequest {
  public static final String JSON_PROPERTY_USERNAME = "username";
  private String username;

  public static final String JSON_PROPERTY_PASSWORD = "password";
  private String password;

  public static final String JSON_PROPERTY_REQUEST_TOKEN = "request_token";
  private String requestToken;

  public POSTAuthenticationTokenValidateWithLoginRequest() {
  }

  public POSTAuthenticationTokenValidateWithLoginRequest username(String username) {
    
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUsername() {
    return username;
  }


  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUsername(String username) {
    this.username = username;
  }


  public POSTAuthenticationTokenValidateWithLoginRequest password(String password) {
    
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPassword() {
    return password;
  }


  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPassword(String password) {
    this.password = password;
  }


  public POSTAuthenticationTokenValidateWithLoginRequest requestToken(String requestToken) {
    
    this.requestToken = requestToken;
    return this;
  }

   /**
   * Get requestToken
   * @return requestToken
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_REQUEST_TOKEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRequestToken() {
    return requestToken;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_TOKEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRequestToken(String requestToken) {
    this.requestToken = requestToken;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    POSTAuthenticationTokenValidateWithLoginRequest poSTAuthenticationTokenValidateWithLoginRequest = (POSTAuthenticationTokenValidateWithLoginRequest) o;
    return Objects.equals(this.username, poSTAuthenticationTokenValidateWithLoginRequest.username) &&
        Objects.equals(this.password, poSTAuthenticationTokenValidateWithLoginRequest.password) &&
        Objects.equals(this.requestToken, poSTAuthenticationTokenValidateWithLoginRequest.requestToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(username, password, requestToken);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class POSTAuthenticationTokenValidateWithLoginRequest {\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    requestToken: ").append(toIndentedString(requestToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

